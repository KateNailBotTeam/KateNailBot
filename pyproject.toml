[tool.poetry]
name = "katenailbot"
version = "0.1.0"
description = "Telegram bot for clients and nail master"
authors = ["Win.freez <Win.freez@yandex.ru>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12"
aiogram = "^3.20.0.post0"
aiofiles = "^24.1.0"
python-dotenv = "^1.1.0"
pydantic-settings = "^2.9.1"
sqlalchemy = "^2.0.41"
asyncpg = "^0.30.0"
alembic = "^1.16.1"
redis = "^6.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.10"
mypy = "^1.15.0"
pre-commit = "^4.2.0"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
pytest-cov = "^6.1.1"
packaging = "^25.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"


[tool.ruff.lint]
select = [
    "E", # pycodestyle (ошибки)
    "F", # Pyflakes (базовые проверки)
    "W", # pycodestyle (предупреждения)
    "UP", # pyupgrade (автоматическое обновление синтаксиса)
    "I", # isort (сортировка импортов)
    "S", # flake8-bandit (безопасность)
    "N", # PEP8-naming
    "RUF", # Ruff-специфичные правила
    "ASYNC", # Асинхронные ошибки
    "B", # flake8-bugbear (доп. проверки)
    "PL", # Pylint (стиль и ошибки)
    "SIM", # Упрощение кода
    "LOG", # Проверка логирования
    "ARG", # Неиспользуемые аргументы
    "ANN", # Аннотации типов
    "TRY", # Обработка исключений (tryceratops)
]
ignore = [
    "TRY003", # указание сообщения в ошибке
    "RUF001", # Проверка на визуально похожие символы. (Ошибочно срабатывает на кириллице)
    "D", # pydocstyle (если не нужна проверка докстрингов)
    "TRY003", # длинный текст в описании ошибки
    "ANN401", # аннотация *args и **kwargs
]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"**/handlers/*.py" = ["PLR0913", "PLR0915"]
"**/test_*.py" = ["S101", "PLR2004", "ANN"]
"**/tests/**/*.py" = ["S101", "PLR2004", "ANN"]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_untyped_decorators = false
exclude = "^tests/"
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_typed = true


[tool.pytest.ini_options]
minversion = "7.0"
pythonpath = ". src"
addopts = "--cov=src --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
markers = [
    "integration: integration tests",
    "unit: unit tests",
    "slow: slow tests (deselect with -m 'not slow')"
]