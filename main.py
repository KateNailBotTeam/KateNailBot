import asyncio
import logging

from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.utils import markdown
from aiogram.enums import ParseMode

from config import settings

bot = Bot(token=settings.BOT_TOKEN)
dp = Dispatcher()


@dp.message(CommandStart())
async def handle_start(message: types.Message):
    text = markdown.text(
        f"–ü—Ä–∏–≤–µ—Ç {markdown.hbold(message.from_user.full_name)}! –ó–¥–µ—Å—å –¥–µ–ª–∞—é—Ç —Ö–æ—Ä–æ—à–∏–π –º–∞–Ω–∏–∫—é—Ä. –û—Ç–∫—Ä–æ–π –º–µ–Ω—é –¥–ª—è –∑–∞–ø–∏—Å–∏.",
        sep='\n'
        )
    await message.answer(text=text, reply_to_message_id=message.message_id, parse_mode=ParseMode.HTML)


@dp.message(Command("help"))
async def handle_help(message: types.Message):
    help_text = markdown.text(
        markdown.hbold("‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–ª–æ–Ω –º–∞–Ω–∏–∫—é—Ä–∞ ¬´Kate Nail¬ª! ‚ú®\n\n"),
        markdown.hbold("üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"),
        "/start ‚Äî –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n",
        "/help ‚Äî –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É\n",
        "/book ‚Äî –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –æ–Ω–ª–∞–π–Ω\n",
        "/cancel ‚Äî –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å\n",
        "/price ‚Äî –£–∑–Ω–∞—Ç—å —Ü–µ–Ω—ã\n",
        "/contacts ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–∞–ª–æ–Ω–∞\n\n",
        markdown.hbold("üíÖ –£—Å–ª—É–≥–∏:\n"),
        "‚Ä¢ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–∞–Ω–∏–∫—é—Ä\n",
        "‚Ä¢ –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –º–∞–Ω–∏–∫—é—Ä\n",
        "‚Ä¢ –ü–æ–∫—Ä—ã—Ç–∏–µ –≥–µ–ª—å-–ª–∞–∫–æ–º\n",
        "‚Ä¢ –î–∏–∑–∞–π–Ω –Ω–æ–≥—Ç–µ–π\n",
        "‚Ä¢ –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –Ω–æ–≥—Ç–µ–π\n",
        "‚Ä¢ –ü–µ–¥–∏–∫—é—Ä\n\n",
        markdown.hbold("‚è∞ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:\n"),
        "–ü–Ω‚Äì–ü—Ç: 10:00‚Äì20:00\n",
        "–°–±‚Äì–í—Å: 11:00‚Äì19:00\n\n",
        markdown.hbold("üìç –ê–¥—Ä–µ—Å:\n"),
        "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ö—Ä–∞—Å–∏–≤—ã—Ö –ù–æ–≥—Ç–µ–π, 15 (–º. ¬´–ú–∞–Ω–∏–∫—é—Ä–Ω–∞—è¬ª)\n\n",
        "üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX\n\n",
        markdown.hbold("‚ùó –ü—Ä–∞–≤–∏–ª–∞:\n"),
        "- –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –≤–æ–∑–º–æ–∂–Ω–∞ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º –∑–∞ 3 —á–∞—Å–∞ –¥–æ –ø—Ä–∏—ë–º–∞.\n",
        "- –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ –∫–∞—Ä—Ç–æ–π.\n",
        "- –ü—Ä–∏ –æ–ø–æ–∑–¥–∞–Ω–∏–∏ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 15 –º–∏–Ω—É—Ç –≤—Ä–µ–º—è –ø—Ä–∏—ë–º–∞ —Å–æ–∫—Ä–∞—â–∞–µ—Ç—Å—è.\n\n",
        "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–∂–º–∏—Ç–µ /book –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤ –º–µ–Ω—é ‚Üì",
    )
    await message.answer(text=help_text, parse_mode=ParseMode.HTML)


@dp.message()
async def echo_message(message: types.Message):
    await message.copy_to(chat_id=message.chat.id)


async def main():
    logging.basicConfig(level=logging.DEBUG)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
